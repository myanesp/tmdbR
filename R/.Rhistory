}
get_similar_movies <- function(id) {
req <- request(Sys.getenv("tmdb_endpoint")) %>%
req_url_path_append("movie") %>%
req_url_path_append(id) %>%
req_url_path_append("similar") %>%
req_url_query(api_key = Sys.getenv("api_key_tmdb"))
resp_req <- req %>%
req_perform()
resp_body_similar <-
resp_req %>%
resp_body_json(simplifyVector = TRUE)
title_from <- get_details(id, "movie", "title")
similar <- resp_body_similar$results %>%
mutate(id_from = id,
title_from = title_from)
return(similar)
}
get_similar_movies(238)
get_similar_movies <- function(id) {
req <- request(Sys.getenv("tmdb_endpoint")) %>%
req_url_path_append("movie") %>%
req_url_path_append(id) %>%
req_url_path_append("similar") %>%
req_url_query(api_key = Sys.getenv("api_key_tmdb"))
resp_req <- req %>%
req_perform()
resp_body_similar <-
resp_req %>%
resp_body_json(simplifyVector = TRUE)
title_from <- get_details(id, "movie", "title")
similar <- resp_body_similar$results %>%
mutate(id_from = id,
title_from = title_from$title)
return(similar)
}
get_similar_movies(238)
get_similar_movies <- function(id) {
req <- request(Sys.getenv("tmdb_endpoint")) %>%
req_url_path_append("movie") %>%
req_url_path_append(id) %>%
req_url_path_append("similar") %>%
req_url_query(api_key = Sys.getenv("api_key_tmdb"))
resp_req <- req %>%
req_perform()
resp_body_similar <-
resp_req %>%
resp_body_json(simplifyVector = TRUE)
title_from <- get_details(id, "movie", "title")
similar <- resp_body_similar$results %>%
mutate(id_from = title_from$id,
title_from = title_from$title)
return(similar)
}
get_similar_movies <- function(id) {
req <- request(Sys.getenv("tmdb_endpoint")) %>%
req_url_path_append("movie") %>%
req_url_path_append(id) %>%
req_url_path_append("similar") %>%
req_url_query(api_key = Sys.getenv("api_key_tmdb"))
resp_req <- req %>%
req_perform()
resp_body_similar <-
resp_req %>%
resp_body_json(simplifyVector = TRUE)
title_from <- get_details(id, "movie", "title")
similar <- resp_body_similar$results %>%
mutate(id_from = title_from$id,
title_from = title_from$title)
return(similar)
}
get_similar_movies(238)
get_similar_tv <- function(id) {
req <- request(Sys.getenv("tmdb_endpoint")) %>%
req_url_path_append("tv") %>%
req_url_path_append(id) %>%
req_url_path_append("similar") %>%
req_url_query(api_key = Sys.getenv("api_key_tmdb"))
resp_req <- req %>%
req_perform()
resp_body_similar <-
resp_req %>%
resp_body_json(simplifyVector = TRUE)
title_from <- get_details(id, "movie", "title")
similar <- resp_body_similar$results %>%
mutate(id_from = title_from$id,
title_from = title_from$title)
return(similar)
}
View(tv)
get_similar_tv(1396)
get_similar_tv <- function(id) {
req <- request(Sys.getenv("tmdb_endpoint")) %>%
req_url_path_append("tv") %>%
req_url_path_append(id) %>%
req_url_path_append("similar") %>%
req_url_query(api_key = Sys.getenv("api_key_tmdb"))
resp_req <- req %>%
req_perform()
resp_body_similar <-
resp_req %>%
resp_body_json(simplifyVector = TRUE)
title_from <- get_details(id, "tv", "title")
similar <- resp_body_similar$results %>%
mutate(id_from = title_from$id,
title_from = title_from$title)
return(similar)
}
get_similar_tv <- function(id) {
req <- request(Sys.getenv("tmdb_endpoint")) %>%
req_url_path_append("tv") %>%
req_url_path_append(id) %>%
req_url_path_append("similar") %>%
req_url_query(api_key = Sys.getenv("api_key_tmdb"))
resp_req <- req %>%
req_perform()
resp_body_similar <-
resp_req %>%
resp_body_json(simplifyVector = TRUE)
title_from <- get_details(id, "tv", "title")
similar <- resp_body_similar$results %>%
mutate(id_from = title_from$id,
title_from = title_from$title)
return(similar)
}
get_similar_tv(1396)
req <- request(Sys.getenv("tmdb_endpoint")) %>%
req_url_path_append("tv") %>%
req_url_path_append(id) %>%
req_url_path_append("similar") %>%
req_url_query(api_key = Sys.getenv("api_key_tmdb"))
resp_req <- req %>%
req_perform()
resp_body_similar <-
resp_req %>%
resp_body_json(simplifyVector = TRUE)
id <- 1396
get_similar_tv <- function(id) {
req <- request(Sys.getenv("tmdb_endpoint")) %>%
req_url_path_append("tv") %>%
req_url_path_append(id) %>%
req_url_path_append("similar") %>%
req_url_query(api_key = Sys.getenv("api_key_tmdb"))
resp_req <- req %>%
req_perform()
resp_body_similar <-
resp_req %>%
resp_body_json(simplifyVector = TRUE)
title_from <- get_details(id, "tv", "title")
similar <- resp_body_similar$results %>%
mutate(id_from = title_from$id,
title_from = title_from$title)
return(similar)
}
get_similar_tv(id)
req <- request(Sys.getenv("tmdb_endpoint")) %>%
req_url_path_append("tv") %>%
req_url_path_append(id) %>%
req_url_path_append("similar") %>%
req_url_query(api_key = Sys.getenv("api_key_tmdb"))
resp_req <- req %>%
req_perform()
resp_body_similar <-
resp_req %>%
resp_body_json(simplifyVector = TRUE)
View(resp_body_similar)
View(req)
req[["url"]]
get_similar_tv(id)
title_from <- get_details(id, "tv", "title")
req <- request(Sys.getenv("tmdb_endpoint")) %>%
req_url_path_append("tv") %>%
req_url_path_append(id) %>%
req_url_query(api_key = Sys.getenv("api_key_tmdb"))
resp_req <- req %>%
req_perform()
resp_body_details <-
resp_req %>%
resp_body_json(simplifyVector = TRUE)
View(resp_body_details)
get_similar_tv <- function(id) {
req <- request(Sys.getenv("tmdb_endpoint")) %>%
req_url_path_append("tv") %>%
req_url_path_append(id) %>%
req_url_path_append("similar") %>%
req_url_query(api_key = Sys.getenv("api_key_tmdb"))
resp_req <- req %>%
req_perform()
resp_body_similar <-
resp_req %>%
resp_body_json(simplifyVector = TRUE)
title_from <- get_details(id, "tv", "name")
similar <- resp_body_similar$results %>%
mutate(id_from = title_from$id,
title_from = title_from$title)
return(similar)
}
get_similar_tv(id)
search_tmdb("castle")
# Refine the output (bind_cols), refine the language variable
search_tmdb <- function(query) {
req <- request(Sys.getenv("tmdb_endpoint")) %>%
req_url_path_append("/search/multi") %>%
req_url_query(api_key = Sys.getenv("api_key_tmdb")) %>%
req_url_query(query = query) %>%
req_url_query(lang = "language=en-US")
resp_req <- req %>%
req_perform()
resp_body_req_search <-
resp_req %>%
resp_body_json(simplifyVector = TRUE) %>%
as_tibble()
search <- resp_body_req_search$results
return(search)
}
search_tmdb("castle")
# Refine the output (bind_cols), refine the language variable
search_tmdb <- function(query) {
req <- request(Sys.getenv("tmdb_endpoint")) %>%
req_url_path_append("/search/multi") %>%
req_url_query(api_key = Sys.getenv("api_key_tmdb")) %>%
req_url_query(query = query) %>%
req_url_query(lang = "language=en-US")
resp_req <- req %>%
req_perform()
resp_body_req_search <-
resp_req %>%
resp_body_json(simplifyVector = TRUE) %>%
as_tibble()
search <- resp_body_req_search$results %>%
relocate(ends_with("path"), .after = last_col())
return(search)
}
search_tmdb("castle")
# Refine the output (bind_cols), refine the language variable
search_tmdb <- function(query) {
req <- request(Sys.getenv("tmdb_endpoint")) %>%
req_url_path_append("/search/multi") %>%
req_url_query(api_key = Sys.getenv("api_key_tmdb")) %>%
req_url_query(query = query) %>%
req_url_query(lang = "language=en-US")
resp_req <- req %>%
req_perform()
resp_body_req_search <-
resp_req %>%
resp_body_json(simplifyVector = TRUE) %>%
as_tibble()
search <- resp_body_req_search$results %>%
mutate(mergetitle = coalesce(name, title),
mergeoriginal = coalesce(original_name, original_title),
premiere = coalesce(first_air_date, release_date)) %>%
relocate(ends_with("path"), .after = last_col()) %>%
relocate("media_type", .after = "name")
return(search)
}
search_tmdb("castle")
# Refine the output (bind_cols), refine the language variable
search_tmdb <- function(query) {
req <- request(Sys.getenv("tmdb_endpoint")) %>%
req_url_path_append("/search/multi") %>%
req_url_query(api_key = Sys.getenv("api_key_tmdb")) %>%
req_url_query(query = query) %>%
req_url_query(lang = "language=en-US")
resp_req <- req %>%
req_perform()
resp_body_req_search <-
resp_req %>%
resp_body_json(simplifyVector = TRUE) %>%
as_tibble()
search <- resp_body_req_search$results %>%
mutate(mergetitle = coalesce(name, title),
mergeoriginal = coalesce(original_name, original_title),
premiere = coalesce(first_air_date, release_date)) %>%
relocate(ends_with("path"), .after = last_col()) %>%
relocate(id, title, genre_ids, .after = page) %>%
relocate(original_title, .after = adult) %>%
relocate("media_type", .after = "name")
return(search)
}
search_tmdb("castle")
# Refine the output (bind_cols), refine the language variable
search_tmdb <- function(query) {
req <- request(Sys.getenv("tmdb_endpoint")) %>%
req_url_path_append("/search/multi") %>%
req_url_query(api_key = Sys.getenv("api_key_tmdb")) %>%
req_url_query(query = query) %>%
req_url_query(lang = "language=en-US")
resp_req <- req %>%
req_perform()
resp_body_req_search <-
resp_req %>%
resp_body_json(simplifyVector = TRUE) %>%
as_tibble()
search <- resp_body_req_search$results %>%
mutate(mergetitle = coalesce(name, title),
mergeoriginal = coalesce(original_name, original_title),
premiere = coalesce(first_air_date, release_date)) %>%
relocate(ends_with("path"), .after = last_col()) %>%
relocate(id, title, genre_ids, .after = adults) %>%
relocate(original_title, .after = overview) %>%
relocate("media_type", .after = "name")
return(search)
}
search_tmdb("castle")
req <- request(Sys.getenv("tmdb_endpoint")) %>%
req_url_path_append("/search/multi") %>%
req_url_query(api_key = Sys.getenv("api_key_tmdb")) %>%
req_url_query(query = query) %>%
req_url_query(lang = "language=en-US")
query <- "castle"
# Refine the output (bind_cols), refine the language variable
search_tmdb <- function(query) {
req <- request(Sys.getenv("tmdb_endpoint")) %>%
req_url_path_append("/search/multi") %>%
req_url_query(api_key = Sys.getenv("api_key_tmdb")) %>%
req_url_query(query = query) %>%
req_url_query(lang = "language=en-US")
resp_req <- req %>%
req_perform()
resp_body_req_search <-
resp_req %>%
resp_body_json(simplifyVector = TRUE) %>%
as_tibble()
search <- resp_body_req_search$results %>%
mutate(mergetitle = coalesce(name, title),
mergeoriginal = coalesce(original_name, original_title),
premiere = coalesce(first_air_date, release_date)) %>%
relocate(ends_with("path"), .after = last_col()) %>%
relocate(id, title, genre_ids, .after = adults) %>%
relocate(original_title, .after = overview) %>%
relocate("media_type", .after = "name")
return(search)
}
search_tmdb("castle")
req <- request(Sys.getenv("tmdb_endpoint")) %>%
req_url_path_append("/search/multi") %>%
req_url_query(api_key = Sys.getenv("api_key_tmdb")) %>%
req_url_query(query = query) %>%
req_url_query(lang = "language=en-US")
resp_req <- req %>%
req_perform()
resp_body_req_search <-
resp_req %>%
resp_body_json(simplifyVector = TRUE) %>%
as_tibble()
search <- resp_body_req_search$results
View(search)
# Refine the output (bind_cols), refine the language variable
search_tmdb <- function(query) {
req <- request(Sys.getenv("tmdb_endpoint")) %>%
req_url_path_append("/search/multi") %>%
req_url_query(api_key = Sys.getenv("api_key_tmdb")) %>%
req_url_query(query = query) %>%
req_url_query(lang = "language=en-US")
resp_req <- req %>%
req_perform()
resp_body_req_search <-
resp_req %>%
resp_body_json(simplifyVector = TRUE) %>%
as_tibble()
search <- resp_body_req_search$results %>%
mutate(mergetitle = coalesce(name, title),
mergeoriginal = coalesce(original_name, original_title),
premiere = coalesce(first_air_date, release_date)) %>%
relocate(ends_with("path"), .after = last_col()) %>%
relocate(id, title, genre_ids, .after = adult) %>%
relocate(original_title, .after = overview) %>%
relocate("media_type", .after = "name")
return(search)
}
search_tmdb("castle")
# Refine the output (bind_cols), refine the language variable
search_tmdb <- function(query) {
req <- request(Sys.getenv("tmdb_endpoint")) %>%
req_url_path_append("/search/multi") %>%
req_url_query(api_key = Sys.getenv("api_key_tmdb")) %>%
req_url_query(query = query) %>%
req_url_query(lang = "language=en-US")
resp_req <- req %>%
req_perform()
resp_body_req_search <-
resp_req %>%
resp_body_json(simplifyVector = TRUE) %>%
as_tibble()
search <- resp_body_req_search$results %>%
mutate(mergetitle = coalesce(name, title),
mergeoriginal = coalesce(original_name, original_title),
premiere = coalesce(first_air_date, release_date)) %>%
rename(title = mergetitle)
relocate(ends_with("path"), .after = last_col()) %>%
relocate(id, title, genre_ids, .after = adult) %>%
relocate(original_title, .after = overview) %>%
relocate("media_type", .after = "name")
return(search)
}
# Refine the output (bind_cols), refine the language variable
search_tmdb <- function(query) {
req <- request(Sys.getenv("tmdb_endpoint")) %>%
req_url_path_append("/search/multi") %>%
req_url_query(api_key = Sys.getenv("api_key_tmdb")) %>%
req_url_query(query = query) %>%
req_url_query(lang = "language=en-US")
resp_req <- req %>%
req_perform()
resp_body_req_search <-
resp_req %>%
resp_body_json(simplifyVector = TRUE) %>%
as_tibble()
search <- resp_body_req_search$results %>%
mutate(mergetitle = coalesce(name, title),
mergeoriginal = coalesce(original_name, original_title),
premiere = coalesce(first_air_date, release_date)) %>%
rename(title = mergetitle) %>%
relocate(ends_with("path"), .after = last_col()) %>%
relocate(id, title, genre_ids, .after = adult) %>%
relocate(original_title, .after = overview) %>%
relocate("media_type", .after = "name")
return(search)
}
search_tmdb("castle")
# Refine the output (bind_cols), refine the language variable
search_tmdb <- function(query) {
req <- request(Sys.getenv("tmdb_endpoint")) %>%
req_url_path_append("/search/multi") %>%
req_url_query(api_key = Sys.getenv("api_key_tmdb")) %>%
req_url_query(query = query) %>%
req_url_query(lang = "language=en-US")
resp_req <- req %>%
req_perform()
resp_body_req_search <-
resp_req %>%
resp_body_json(simplifyVector = TRUE) %>%
as_tibble()
search <- resp_body_req_search$results %>%
mutate(mergetitle = coalesce(name, title),
mergeoriginal = coalesce(original_name, original_title),
premiere = coalesce(first_air_date, release_date)) %>%
select(-title, -name, -original_name, -original_title) %>%
rename(title = mergetitle) %>%
relocate(ends_with("path"), .after = last_col()) %>%
relocate(id, title, genre_ids, .after = adult) %>%
relocate(original_title, .after = overview) %>%
relocate("media_type", .after = "name")
return(search)
}
search_tmdb("castle")
# Refine the output (bind_cols), refine the language variable
search_tmdb <- function(query) {
req <- request(Sys.getenv("tmdb_endpoint")) %>%
req_url_path_append("/search/multi") %>%
req_url_query(api_key = Sys.getenv("api_key_tmdb")) %>%
req_url_query(query = query) %>%
req_url_query(lang = "language=en-US")
resp_req <- req %>%
req_perform()
resp_body_req_search <-
resp_req %>%
resp_body_json(simplifyVector = TRUE) %>%
as_tibble()
search <- resp_body_req_search$results %>%
mutate(mergetitle = coalesce(name, title),
mergeoriginal = coalesce(original_name, original_title),
premiere = coalesce(first_air_date, release_date)) %>%
select(-title, -name, -original_name, -original_title) %>%
rename(title = mergetitle, original_title = mergeoriginal) %>%
relocate(ends_with("path"), .after = last_col()) %>%
relocate(id, title, genre_ids, .after = adult) %>%
relocate(original_title, .after = overview) %>%
relocate("media_type", .after = "name")
return(search)
}
search_tmdb("castle")
# Refine the output (bind_cols), refine the language variable
search_tmdb <- function(query) {
req <- request(Sys.getenv("tmdb_endpoint")) %>%
req_url_path_append("/search/multi") %>%
req_url_query(api_key = Sys.getenv("api_key_tmdb")) %>%
req_url_query(query = query) %>%
req_url_query(lang = "language=en-US")
resp_req <- req %>%
req_perform()
resp_body_req_search <-
resp_req %>%
resp_body_json(simplifyVector = TRUE) %>%
as_tibble()
search <- resp_body_req_search$results %>%
mutate(mergetitle = coalesce(name, title),
mergeoriginal = coalesce(original_name, original_title),
premiere = coalesce(first_air_date, release_date)) %>%
select(-title, -name, -original_name, -original_title) %>%
rename(title = mergetitle, original_title = mergeoriginal) %>%
relocate(ends_with("path"), .after = last_col()) %>%
relocate(id, title, genre_ids, .after = adult) %>%
relocate(original_title, .after = overview) %>%
relocate("media_type", .after = title)
return(search)
}
e
search_tmdb("castle")
install.packages("badger")
install.packages("badger")
badger::badge_devel("myanesp/pkgcsv")
badger::badge_devel("myanesp/pkgcsv", "blue")
library(badger)
badge_last_commit("myanesp/tmdbR")
badge_last_commit("myanesp/pkgcsv")
badge_last_commit("myanesp/pkgcsv")
use_git()
badge_code_size("myanesp/pkgcsv")
badge_last_commit("myanesp/pkgcsv")
setwd("~/Documentos/Máster/Data Harvesting/project/tmdbR/R")
setwd("~/Documentos/Máster/Data Harvesting/project/tmdbR/R")
